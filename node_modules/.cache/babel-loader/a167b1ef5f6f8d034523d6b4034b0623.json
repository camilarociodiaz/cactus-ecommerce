{"ast":null,"code":"var _jsxFileName = \"/Users/camilarociodiaz/Desktop/development/cactus/src/components/ItemDetailContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ItemDetail } from \"./ItemDetail\";\nimport { useParams } from \"react-router-dom\";\nimport { Plantas } from \"./Item.jsx\";\nimport { Counter } from \"./Counter/Counter\";\nimport { Show } from \"./Counter/showButton\";\nimport { useCartContext } from \"./Context/CartContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemDetailContainer = () => {\n  _s();\n\n  /*funciones para el contador*/\n  const [item, setItems] = useState([]);\n  const [count, setCount] = useState(0);\n  const {\n    addItem,\n    show,\n    handleShow\n  } = useCartContext();\n  useEffect(() => {\n    setItems(Plantas);\n  }, []);\n  const {\n    id\n  } = useParams();\n\n  const handlerAdd = () => {\n    setCount(count + 1);\n  };\n\n  const handlerSub = () => {\n    setCount(count - 1);\n  };\n\n  useEffect(() => {\n    obtenerProductoBD(); //ver aca si no es otra funcion//\n\n    if (show) handleShow();\n  }, [id]);\n  /*funciones para obtener el id del producto en el itemDetail*/\n\n  useEffect(() => {\n    const obtenerProducto = async id => {\n      const responsePromise = await obtenerProductoBD(id);\n      setItems(responsePromise);\n    };\n\n    obtenerProducto(id);\n  }, [id]);\n\n  const obtenerProductoBD = nombreProducto => {\n    return new Promise((resolve, reject) => {\n      const arregloProductosBD = Plantas;\n      const productoEncontrado = arregloProductosBD.filter(elemento => elemento.id == nombreProducto);\n      console.log(\"producto encontrado\", productoEncontrado);\n      setTimeout(() => {\n        resolve(productoEncontrado);\n      });\n    });\n  };\n\n  return item.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardPadre-detail\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 300\n        },\n        className: \"cardHijo\",\n        children: [/*#__PURE__*/_jsxDEV(ItemDetail, {\n          className: \"card-body\",\n          productoProp: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          className: \"card-body\",\n          count: count,\n          sub: handlerSub,\n          add: handlerAdd,\n          condition: show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: () => addItem(item, count),\n          style: {\n            margin: 10\n          },\n          disabled: show || count === 0,\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#collapseWidthExample\",\n          \"aria-expanded\": \"false\",\n          \"aria-controls\": \"collapseWidthExample\",\n          children: \"Agregar a carrito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), show && /*#__PURE__*/_jsxDEV(Show, {\n          show: handleShow,\n          count: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this);\n  });\n};\n\n_s(ItemDetailContainer, \"2kN03gZAC1NFXMNK3KWjub3OszE=\", false, function () {\n  return [useCartContext, useParams];\n});\n\n_c = ItemDetailContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetailContainer\");","map":{"version":3,"sources":["/Users/camilarociodiaz/Desktop/development/cactus/src/components/ItemDetailContainer.jsx"],"names":["React","useEffect","useState","ItemDetail","useParams","Plantas","Counter","Show","useCartContext","ItemDetailContainer","item","setItems","count","setCount","addItem","show","handleShow","id","handlerAdd","handlerSub","obtenerProductoBD","obtenerProducto","responsePromise","nombreProducto","Promise","resolve","reject","arregloProductosBD","productoEncontrado","filter","elemento","console","log","setTimeout","map","width","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ItemDetail } from \"./ItemDetail\";\nimport { useParams } from \"react-router-dom\";\nimport { Plantas } from \"./Item.jsx\";\nimport { Counter } from \"./Counter/Counter\";\nimport { Show } from \"./Counter/showButton\";\nimport { useCartContext } from \"./Context/CartContext\";\n\n\n\nexport const ItemDetailContainer = () => {\n\n  /*funciones para el contador*/\n\n  const [item, setItems] = useState([])\n  const [count, setCount] = useState(0);\n\n  const { addItem, show, handleShow } = useCartContext();\n\n  useEffect(() => {\n    setItems(Plantas);\n\n  }, [])\n\n  const { id } = useParams();\n\n\n  const handlerAdd = () => {\n    setCount(count + 1);\n  };\n\n  const handlerSub = () => {\n    setCount(count - 1);\n  };\n\n\n  useEffect(() => {\n    obtenerProductoBD();    //ver aca si no es otra funcion//\n    if (show) handleShow();\n  }, [id]);\n\n\n\n  /*funciones para obtener el id del producto en el itemDetail*/\n\n\n  useEffect(() => {\n\n    const obtenerProducto = async (id) => {\n      const responsePromise = await obtenerProductoBD(id);\n      setItems(responsePromise);\n\n    }\n    obtenerProducto(id);\n  }, [id])\n\n\n  const obtenerProductoBD = (nombreProducto) => {\n    return new Promise((resolve, reject) => {\n\n      const arregloProductosBD = Plantas;\n      const productoEncontrado = arregloProductosBD.filter((elemento) => elemento.id == nombreProducto);\n\n\n      console.log(\"producto encontrado\", productoEncontrado)\n\n      setTimeout(() => {\n        resolve(productoEncontrado)\n      });\n\n    })\n\n  }\n\n  \n\n\n  return (\n\n\n\n    item.map(item => {\n\n      return (\n\n\n\n\n        <div className=\"cardPadre-detail\">\n\n\n          <div style={{ width: 300 }} className=\"cardHijo\">    \n            <ItemDetail className=\"card-body\"\n              key={item.id}\n              productoProp={item}\n            />\n\n\n            <Counter className=\"card-body\"\n              count={count}\n              sub={handlerSub}\n              add={handlerAdd}\n              condition={show}\n            />\n\n\n            <button\n              className=\"\"\n              onClick={() => addItem(item, count)}\n              style={{ margin: 10 }}\n              disabled={show || count === 0}\n              data-bs-toggle=\"collapse\" data-bs-target=\"#collapseWidthExample\" aria-expanded=\"false\" aria-controls=\"collapseWidthExample\"\n            >\n              Agregar a carrito\n            </button>\n\n\n            {show && <Show show={handleShow} count={count} />}\n\n          </div>\n\n        </div>\n\n      )\n\n    })\n\n  )\n\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}